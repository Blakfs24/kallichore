{
  "openapi": "3.0.1",
  "info": {
    "description": "Kallichore is a Jupyter kernel gateway and supervisor",
    "version": "1.0.0",
    "title": "Kallichore API",
    "contact": {
      "name": "Posit Software, PBC",
      "url": "https://posit.co",
      "email": "info@posit.co"
    }
  },
  "paths": {
    "/sessions": {
      "get": {
        "operationId": "list-sessions",
        "summary": "List active sessions",
        "responses": {
          "200": {
            "description": "List of active sessions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sessionList"
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "new-session",
        "summary": "Create a new session",
        "security": [
          "bearerAuth"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/newSession"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The session ID",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "session_id": {
                      "type": "string",
                      "description": "A unique identifier for the session"
                    }
                  },
                  "required": [
                    "session_id"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/sessions/{session_id}": {
      "get": {
        "operationId": "get-session",
        "summary": "Get session details",
        "parameters": [
          {
            "name": "session_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Session details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/activeSession"
                }
              }
            }
          },
          "400": {
            "description": "Failed to get session",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Session not found",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "delete": {
        "operationId": "delete-session",
        "summary": "Delete session",
        "security": [
          "bearerAuth"
        ],
        "parameters": [
          {
            "name": "session_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Session deleted",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "400": {
            "description": "Failed to delete session",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "description": "Session not found",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/sessions/{session_id}/start": {
      "post": {
        "operationId": "start-session",
        "summary": "Start a session",
        "security": [
          "bearerAuth"
        ],
        "parameters": [
          {
            "name": "session_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Started",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "400": {
            "description": "Start failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Session not found",
            "content": {
              "application/json": {}
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/sessions/{session_id}/restart": {
      "post": {
        "operationId": "restart-session",
        "summary": "Restart a session",
        "security": [
          "bearerAuth"
        ],
        "parameters": [
          {
            "name": "session_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Restarted",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "400": {
            "description": "Restart failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "description": "Session not found",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/sessions/{session_id}/kill": {
      "post": {
        "operationId": "kill-session",
        "summary": "Force quit session",
        "security": [
          "bearerAuth"
        ],
        "parameters": [
          {
            "name": "session_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Killed",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "400": {
            "description": "Kill failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "description": "Session not found",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/sessions/{session_id}/interrupt": {
      "post": {
        "operationId": "interrupt-session",
        "summary": "Interrupt session",
        "security": [
          "bearerAuth"
        ],
        "parameters": [
          {
            "name": "session_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Interrupted",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "400": {
            "description": "Interrupt failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "description": "Session not found",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/sessions/{session_id}/channels": {
      "get": {
        "operationId": "channels-websocket",
        "summary": "Upgrade to a WebSocket for channel communication",
        "security": [
          "bearerAuth"
        ],
        "parameters": [
          {
            "name": "session_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Upgrade connection to a websocket"
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "description": "Session not found",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/shutdown": {
      "post": {
        "operationId": "shutdown-server",
        "summary": "Shut down all sessions and the server itself",
        "security": [
          "bearerAuth"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Shutting down",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "400": {
            "description": "Shutdown failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/status": {
      "get": {
        "operationId": "server-status",
        "summary": "Get server status and information",
        "responses": {
          "200": {
            "description": "Server status and information",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/serverStatus"
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "error": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "details": {
            "type": "string"
          }
        },
        "required": [
          "code",
          "message"
        ]
      },
      "status": {
        "type": "string",
        "description": "The status of the session",
        "enum": [
          "uninitialized",
          "starting",
          "ready",
          "idle",
          "busy",
          "offline",
          "exited"
        ]
      },
      "interrupt_mode": {
        "type": "string",
        "description": "The mechansim for interrupting the session",
        "enum": [
          "signal",
          "message"
        ]
      },
      "newSession": {
        "type": "object",
        "properties": {
          "session_id": {
            "type": "string",
            "description": "A unique identifier for the session"
          },
          "display_name": {
            "type": "string",
            "description": "A human-readable name for the session"
          },
          "language": {
            "type": "string",
            "description": "The interpreter language"
          },
          "username": {
            "type": "string",
            "description": "The username of the user who owns the session"
          },
          "input_prompt": {
            "type": "string",
            "description": "The text to use to prompt for input"
          },
          "continuation_prompt": {
            "type": "string",
            "description": "The text to use to prompt for input continuations"
          },
          "argv": {
            "type": "array",
            "description": "The program and command-line parameters for the session",
            "items": {
              "type": "string"
            }
          },
          "working_directory": {
            "type": "string",
            "description": "The working directory in which to start the session."
          },
          "env": {
            "type": "object",
            "description": "Environment variables to set for the session",
            "additionalProperties": {
              "type": "string"
            }
          },
          "interrupt_mode": {
            "$ref": "#/components/schemas/interrupt_mode"
          }
        },
        "required": [
          "argv",
          "continuation_prompt",
          "display_name",
          "env",
          "input_prompt",
          "interrupt_mode",
          "language",
          "session_id",
          "username",
          "working_directory"
        ]
      },
      "execution_queue": {
        "type": "object",
        "description": "The execution queue for a session",
        "properties": {
          "active": {
            "type": "object",
            "description": "The execution request currently being evaluated, if any"
          },
          "length": {
            "type": "integer",
            "description": "The number of items in the pending queue"
          },
          "pending": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "description": "The queue of pending execution requests"
          }
        },
        "required": [
          "length",
          "pending"
        ]
      },
      "activeSession": {
        "type": "object",
        "properties": {
          "session_id": {
            "type": "string",
            "description": "A unique identifier for the session"
          },
          "argv": {
            "type": "array",
            "description": "The program and command-line parameters for the session",
            "items": {
              "type": "string"
            }
          },
          "process_id": {
            "type": "integer",
            "description": "The underlying process ID of the session, if the session is running."
          },
          "username": {
            "type": "string",
            "description": "The username of the user who owns the session"
          },
          "display_name": {
            "type": "string",
            "description": "A human-readable name for the session"
          },
          "language": {
            "type": "string",
            "description": "The interpreter language"
          },
          "interrupt_mode": {
            "$ref": "#/components/schemas/interrupt_mode"
          },
          "initial_env": {
            "type": "object",
            "description": "The environment variables set when the session was started",
            "additionalProperties": {
              "type": "string"
            }
          },
          "connected": {
            "type": "boolean",
            "description": "Whether the session is connected to a client"
          },
          "started": {
            "type": "string",
            "format": "date-time",
            "description": "An ISO 8601 timestamp of when the session was started"
          },
          "working_directory": {
            "type": "string",
            "description": "The session's current working directory"
          },
          "input_prompt": {
            "type": "string",
            "description": "The text to use to prompt for input"
          },
          "continuation_prompt": {
            "type": "string",
            "description": "The text to use to prompt for input continuations"
          },
          "execution_queue": {
            "$ref": "#/components/schemas/execution_queue"
          },
          "status": {
            "$ref": "#/components/schemas/status"
          }
        },
        "required": [
          "argv",
          "connected",
          "continuation_prompt",
          "display_name",
          "execution_queue",
          "input_prompt",
          "interrupt_mode",
          "language",
          "session_id",
          "started",
          "status",
          "username",
          "working_directory"
        ]
      },
      "serverStatus": {
        "type": "object",
        "properties": {
          "sessions": {
            "type": "integer"
          },
          "active": {
            "type": "integer"
          },
          "busy": {
            "type": "boolean"
          },
          "version": {
            "type": "string"
          }
        },
        "required": [
          "busy",
          "sessions",
          "active",
          "version"
        ]
      },
      "sessionList": {
        "type": "object",
        "properties": {
          "total": {
            "type": "integer"
          },
          "sessions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/activeSession"
            }
          }
        },
        "required": [
          "total",
          "sessions"
        ]
      }
    },
    "responses": {
      "UnauthorizedError": {
        "description": "Unauthorized",
        "content": {}
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}