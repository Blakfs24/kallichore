//
// main.rs
//
// Copyright (C) 2024 Posit Software, PBC. All rights reserved.
//
//

//! Main binary entry point for openapi_client implementation.

#![allow(missing_docs)]

use clap::{command, Parser};

mod connection_file;
mod error;
mod server;
mod session;
mod socket_forwarder;
mod wire_message;
mod wire_message_header;

#[derive(Parser, Debug)]
#[command(version, about, long_about = None)]
struct Args {
    /// The port to bind the server to
    #[arg(short, long, default_value_t = 8182)]
    port: u16,
}

/// Create custom server, wire it to the autogenerated router,
/// and pass it to the web server.
#[tokio::main]
async fn main() {
    env_logger::init();

    // Parse command line arguments
    let args = Args::parse();

    // Check if the port is already in use
    if !portpicker::is_free_tcp(args.port) {
        log::error!("Port {} is already in use", args.port);
        std::process::exit(1);
    }

    // Start the server
    let addr = format!("127.0.0.1:{}", args.port);

    log::info!("Starting Kallichore server at {}", addr);
    server::create(&addr).await;
}
