openapi: 3.0.1
info:
  contact:
    email: info@posit.co
    name: "Posit Software, PBC"
    url: https://posit.co
  description: Kallichore is a Jupyter kernel gateway and supervisor
  title: Kallichore API
  version: 1.0.0
servers:
- url: /
paths:
  /sessions:
    get:
      operationId: list-sessions
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sessionList'
          description: List of active sessions
      summary: List active sessions
    put:
      operationId: new-session
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/newSession'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/new_session_200_response'
          description: The session ID
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Invalid request
        "401":
          description: Access token is missing or invalid
      security: []
      summary: Create a new session
  /sessions/{session_id}:
    delete:
      operationId: delete-session
      parameters:
      - explode: false
        in: path
        name: session_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/activeSession'
          description: Session deleted
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Failed to delete session
        "401":
          description: Access token is missing or invalid
        "404":
          content:
            application/json: {}
          description: Session not found
      security: []
      summary: Delete session
    get:
      operationId: get-session
      parameters:
      - explode: false
        in: path
        name: session_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/activeSession'
          description: Session details
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Failed to get session
        "404":
          content:
            application/json: {}
          description: Session not found
      summary: Get session details
  /sessions/{session_id}/start:
    post:
      operationId: start-session
      parameters:
      - explode: false
        in: path
        name: session_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Started
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Start failed
        "404":
          content:
            application/json: {}
          description: Session not found
        "401":
          description: Access token is missing or invalid
      security: []
      summary: Start a session
  /sessions/{session_id}/restart:
    post:
      operationId: restart-session
      parameters:
      - explode: false
        in: path
        name: session_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Restarted
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Restart failed
        "401":
          description: Access token is missing or invalid
        "404":
          content:
            application/json: {}
          description: Session not found
      security: []
      summary: Restart a session
  /sessions/{session_id}/kill:
    post:
      operationId: kill-session
      parameters:
      - explode: false
        in: path
        name: session_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Killed
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Kill failed
        "401":
          description: Access token is missing or invalid
        "404":
          content:
            application/json: {}
          description: Session not found
      security: []
      summary: Force quit session
  /sessions/{session_id}/interrupt:
    post:
      operationId: interrupt-session
      parameters:
      - explode: false
        in: path
        name: session_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Interrupted
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Interrupt failed
        "401":
          description: Access token is missing or invalid
        "404":
          content:
            application/json: {}
          description: Session not found
      security: []
      summary: Interrupt session
  /sessions/{session_id}/channels:
    get:
      operationId: channels-websocket
      parameters:
      - explode: false
        in: path
        name: session_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Upgrade connection to a websocket
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Invalid request
        "401":
          description: Access token is missing or invalid
        "404":
          content:
            application/json: {}
          description: Session not found
      security: []
      summary: Upgrade to a WebSocket for channel communication
  /shutdown:
    post:
      operationId: shutdown-server
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Shutting down
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Shutdown failed
        "401":
          description: Access token is missing or invalid
      security: []
      summary: ""
components:
  responses:
    UnauthorizedError:
      description: Access token is missing or invalid
  schemas:
    error:
      example:
        code: code
        details: details
        message: message
      properties:
        code:
          type: string
        message:
          type: string
        details:
          type: string
      required:
      - code
      - message
      type: object
    status:
      description: The status of the session
      enum:
      - uninitialized
      - starting
      - ready
      - idle
      - busy
      - offline
      - exited
      type: string
    interrupt_mode:
      description: The mechansim for interrupting the session
      enum:
      - signal
      - message
      type: string
    newSession:
      properties:
        session_id:
          description: A unique identifier for the session
          type: string
        display_name:
          description: A human-readable name for the session
          type: string
        language:
          description: The interpreter language
          type: string
        username:
          description: The username of the user who owns the session
          type: string
        input_prompt:
          description: The text to use to prompt for input
          type: string
        continuation_prompt:
          description: The text to use to prompt for input continuations
          type: string
        argv:
          description: The program and command-line parameters for the session
          items:
            type: string
          type: array
        working_directory:
          description: The working directory in which to start the session.
          type: string
        env:
          additionalProperties:
            type: string
          description: Environment variables to set for the session
          type: object
        interrupt_mode:
          $ref: '#/components/schemas/interrupt_mode'
      required:
      - argv
      - continuation_prompt
      - display_name
      - env
      - input_prompt
      - interrupt_mode
      - language
      - session_id
      - username
      - working_directory
      type: object
    execution_queue:
      description: The execution queue for a session
      example:
        pending:
        - "{}"
        - "{}"
        length: 1
        active: "{}"
      properties:
        active:
          description: "The execution request currently being evaluated, if any"
          type: object
        length:
          description: The number of items in the pending queue
          type: integer
        pending:
          description: The queue of pending execution requests
          items:
            type: object
          type: array
      required:
      - length
      - pending
      type: object
    activeSession:
      example:
        process_id: 6
        input_prompt: input_prompt
        continuation_prompt: continuation_prompt
        session_id: session_id
        language: language
        started: 2000-01-23T04:56:07.000+00:00
        working_directory: working_directory
        display_name: display_name
        argv:
        - argv
        - argv
        execution_queue:
          pending:
          - "{}"
          - "{}"
          length: 1
          active: "{}"
        interrupt_mode: signal
        connected: true
        initial_env:
          key: initial_env
        username: username
        status: uninitialized
      properties:
        session_id:
          description: A unique identifier for the session
          type: string
        argv:
          description: The program and command-line parameters for the session
          items:
            type: string
          type: array
        process_id:
          description: "The underlying process ID of the session, if the session is\
            \ running."
          type: integer
        username:
          description: The username of the user who owns the session
          type: string
        display_name:
          description: A human-readable name for the session
          type: string
        language:
          description: The interpreter language
          type: string
        interrupt_mode:
          $ref: '#/components/schemas/interrupt_mode'
        initial_env:
          additionalProperties:
            type: string
          description: The environment variables set when the session was started
          type: object
        connected:
          description: Whether the session is connected to a client
          type: boolean
        started:
          description: An ISO 8601 timestamp of when the session was started
          format: date-time
          type: string
        working_directory:
          description: The session's current working directory
          type: string
        input_prompt:
          description: The text to use to prompt for input
          type: string
        continuation_prompt:
          description: The text to use to prompt for input continuations
          type: string
        execution_queue:
          $ref: '#/components/schemas/execution_queue'
        status:
          $ref: '#/components/schemas/status'
      required:
      - argv
      - connected
      - continuation_prompt
      - display_name
      - execution_queue
      - input_prompt
      - interrupt_mode
      - language
      - session_id
      - started
      - status
      - username
      - working_directory
      type: object
    sessionList:
      example:
        total: 0
        sessions:
        - process_id: 6
          input_prompt: input_prompt
          continuation_prompt: continuation_prompt
          session_id: session_id
          language: language
          started: 2000-01-23T04:56:07.000+00:00
          working_directory: working_directory
          display_name: display_name
          argv:
          - argv
          - argv
          execution_queue:
            pending:
            - "{}"
            - "{}"
            length: 1
            active: "{}"
          interrupt_mode: signal
          connected: true
          initial_env:
            key: initial_env
          username: username
          status: uninitialized
        - process_id: 6
          input_prompt: input_prompt
          continuation_prompt: continuation_prompt
          session_id: session_id
          language: language
          started: 2000-01-23T04:56:07.000+00:00
          working_directory: working_directory
          display_name: display_name
          argv:
          - argv
          - argv
          execution_queue:
            pending:
            - "{}"
            - "{}"
            length: 1
            active: "{}"
          interrupt_mode: signal
          connected: true
          initial_env:
            key: initial_env
          username: username
          status: uninitialized
      properties:
        total:
          type: integer
        sessions:
          items:
            $ref: '#/components/schemas/activeSession'
          type: array
      required:
      - sessions
      - total
      type: object
    new_session_200_response:
      example:
        session_id: session_id
      properties:
        session_id:
          description: A unique identifier for the session
          type: string
      required:
      - session_id
      type: object
  securitySchemes:
    bearerAuth:
      scheme: bearer
      type: http

